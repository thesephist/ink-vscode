{
	"name": "Ink",
	"scopeName": "source.ink",
	"patterns": [
		{
			"include": "#expression"
		},
		{
			"include": "#comment"
		}
	],
	"repository": {
		"expression": {
			"name": "expression.group",
			"patterns": [
				{
					"include": "#operator"
				},
				{
					"include": "#identifier"
				},
				{
					"include": "#boolean-literal"
				},
				{
					"include": "#number-literal"
				},
				{
					"include": "#string-literal"
				}
			]
		},
		"expression-list": {
			"name": "expression.group",
			"begin": "\\(",
			"end": "\\)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.paren.open"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.paren.close"
				}
			},
			"patterns": [
				{
					"include": "#expression"
				},
				{
					"include": "#separator"
				}
			]
		},
		"separator": {
			"name": "other",
			"match": ","
		},
		"operator": {
			"name": "keyword.operator",
			"match": "->|:=|::|=>|:|~|\\+|-|\\*|\\/|%|<|>|=|\\."
		},
		"identifier": {
			"name": "variable",
			"match": "[A-Za-z@!?][A-Za-z0-9@!?]*|_"
		},
		"boolean-literal": {
			"name": "constant.language",
			"match": "true|false"
		},
		"number-literal": {
			"name": "constant.numeric",
			"match": "\\d+(\\.\\d*)?"
		},
		"string-literal": {
			"name": "string.quoted.single",
			"begin": "'",
			"end": "'"
		},
		"comment": {
			"name": "comment",
			"begin": "`",
			"end": "`"
		}
	}
}